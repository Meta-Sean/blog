{"entries":[],"headings":["a-blog-implementation-of-andrej-karpathys-micrograd-video","contents","derivative-of-a-function","core-value-object","manual-backpropagation","backward-function","more-operations","pytorch","lets-get-an-intuitive-understanding-of-what-a-derivative-is","fx-3x2---4x-5","core-value-object-1","manual-backpropagation-1","l-d-f","fracdldd-f","lim_h-to-0-fracdhf---dfh","lim_h-to-0-fracdf-hf---dfh","lim_h-to-0-frachfh","f","if-a-variable-z-depends-on-the-variable-y-which-itself-depends-on-the-variable-x-that-is-y-and-z-are-dependent-variables-then-z-depends-on-x-as-well-via-the-intermediate-variable-y.-in-this-case-the-chain-rule-is-expressed-as","fracdzdx-fracdzdy-fracdydx","if-a-car-travels-twice-as-fast-as-a-bicyle-and-the-cycle-is-four-times-as-fast-as-a-walking-man-then-the-car-is-2-4-8-times-faster-than-the-man","lets-manually-check-our-work-by-nudging-c","now-we-will-recurse-our-way-backwards-again-and-going-to-do-our-second-application-of-the-chain-rule","fracdlde--2.0","fracdeda-b","fracdlda-fracdlde-fracdeda","we-know-know-what-back-propagation-is-a-recursive-application-of-the-chain-rule-backwards-through-the-computational-graph","neuron-example","backward-function-1","pytorch-comparison"]}